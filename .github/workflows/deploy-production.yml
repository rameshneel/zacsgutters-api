# .github/workflows/deploy-production.yml
name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: |
          npm install  # Ensure the package-lock.json is updated
          npm ci       # Clean install dependencies after package-lock.json is in sync
      - name: Run tests
        run: npm test
      - name: Run linting
        run: npm run lint

  build:
    name: Build and Push
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Debug Environment Variables
        run: |
          echo "DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}"
          echo "DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}"
          echo "DOCKER_PASSWORD: [HIDDEN]"
          echo "SERVER_HOST: ${{ secrets.SERVER_HOST }}"
          echo "SERVER_USER: ${{ secrets.SERVER_USER }}"
          echo "SSH_PRIVATE_KEY: [HIDDEN]"
          echo "KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/zacsgutter-api:${{ github.sha }},${{ secrets.DOCKER_REGISTRY }}/zacsgutter-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/zacsgutter-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/zacsgutter-api:buildcache,mode=max

      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_REGISTRY }}/zacsgutter-api:${{ github.sha }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Debug SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "echo 'SSH Connection Successful'"

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -x  # Enable debug mode
            cd /var/www/backend/zacsgutter-api
            git pull origin main
            echo 'VERSION=${{ github.sha }}' > .env
            cat .env.production >> .env
            docker-compose pull
            docker-compose up -d --no-build
            docker system prune -af
          EOF

      - name: Verify deployment
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -x
            docker ps
            curl -v https://${{ secrets.PRODUCTION_DOMAIN }}/health
          EOF

      - name: Debug Docker Logs
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            docker logs $(docker ps -q --filter "name=zacsgutter-api")
          EOF
